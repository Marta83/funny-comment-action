{"version":3,"file":"index.js","sources":["../dist-src/util/fs.js","../dist-src/util/babel-validate-specifier.js","../dist-src/util/babel-validate-file.js","../dist-src/index.js"],"sourcesContent":["import { promisify } from 'util';\n// import * as os from 'os';\nimport * as fs from 'fs';\nimport _glob from 'glob';\nimport * as util from 'util';\n// import map from './map';\nexport const glob = promisify(_glob);\n// export const open = util.promisify(fs.open);\n// export const writeFile = util.promisify(fs.writeFile);\n// export const readlink = util.promisify(fs.readlink);\n// export const realpath = util.promisify(fs.realpath);\n// export const readdir = util.promisify(fs.readdir);\n// export const rename = util.promisify(fs.rename);\n// export const access = util.promisify(fs.access);\n// export const stat = util.promisify(fs.stat);\n// export const exists = util.promisify(fs.exists);\n// export const lstat = util.promisify(fs.lstat);\n// export const chmod = util.promisify(fs.chmod);\n// export const link = util.promisify(fs.link);\n// export const existsSync = fs.existsSync;\n// const readFileBuffer = util.promisify(fs.readFile);\nexport const readFile = (path) => {\n    return util.promisify(fs.readFile)(path, { encoding: 'utf-8' });\n};\n// import stripBOM from 'strip-bom';\n// export async function readJson(loc: string): Promise<Object> {\n//   return (await readJsonAndFile(loc)).object;\n// }\n// export async function readJsonAndFile(\n//   loc: string,\n// ): Promise<{\n//   object: Object,\n//   content: string,\n// }> {\n//   const file = await readFile(loc);\n//   try {\n//     return {\n//       object: map(JSON.parse(stripBOM(file))),\n//       content: file,\n//     };\n//   } catch (err) {\n//     err.message = `${loc}: ${err.message}`;\n//     throw err;\n//   }\n// }\n// const cr = '\\r'.charCodeAt(0);\n// const lf = '\\n'.charCodeAt(0);\n// async function getEolFromFile(path: string): Promise<string | void> {\n//   if (!await exists(path)) {\n//     return undefined;\n//   }\n//   const buffer = await readFileBuffer(path);\n//   for (let i = 0; i < buffer.length; ++i) {\n//     if (buffer[i] === cr) {\n//       return '\\r\\n';\n//     }\n//     if (buffer[i] === lf) {\n//       return '\\n';\n//     }\n//   }\n//   return undefined;\n// }\n// export async function writeFilePreservingEol(path: string, data: string): Promise<void> {\n//   const eol = (await getEolFromFile(path)) || os.EOL;\n//   if (eol !== '\\n') {\n//     data = data.replace(/\\n/g, eol);\n//   }\n//   await writeFile(path, data);\n// }\n","// @flow\nimport chalk from 'chalk';\nfunction getLineCol(node) {\n    const loc = node.loc.start;\n    return chalk.dim(`[${loc.line}:${loc.column}]`);\n}\nexport function validateDynamicImportArguments(path) {\n    if (path.parent.arguments.length !== 1) {\n        return new Set([\n            `${getLineCol(path.node)} \"\\`import()\\` only accepts 1 argument, but got ${path.parent.arguments.length}`,\n        ]);\n    }\n    const [argNode] = path.parent.arguments;\n    if (argNode.type !== 'StringLiteral') {\n        return new Set([\n            `${getLineCol(path.node)} Pika expects strings as \\`import()\\` arguments. Treating this as an absolute file path.`,\n        ]);\n    }\n    return new Set();\n}\n","// @flow\nimport { parse } from '@babel/parser';\nimport traverse from '@babel/traverse';\nimport chalk from 'chalk';\nimport * as nodePath from 'path';\nimport { validateDynamicImportArguments } from './babel-validate-specifier.js';\nfunction getLineCol(node) {\n    const loc = node.loc.start;\n    return chalk.dim(`[${loc.line}:${loc.column}]`);\n}\nexport default function validate(code, fileLoc, cwd, dist, ignoreExtensions) {\n    const ast = parse(code, {\n        plugins: ['dynamicImport', 'importMeta'],\n        sourceType: 'module',\n    });\n    const errors = new Set();\n    function validateSpecifier(specifier, path) {\n        const errors = new Set();\n        if (specifier.startsWith('./') || specifier.startsWith('../')) {\n            if (!ignoreExtensions && !specifier.endsWith('.js')) {\n                errors.add(`${getLineCol(path.node)} \"${specifier}\": Valid relative imports must include the \".js\" file extension.`);\n            }\n            const absPathToImport = nodePath.resolve(nodePath.dirname(fileLoc), specifier);\n            const assetsPath = nodePath.join(cwd, 'assets');\n            if (!absPathToImport.startsWith(cwd)) {\n                errors.add(`${getLineCol(path.node)} \"${specifier}\": Valid imports cannot reach outside of the current package.`);\n            }\n            else if (!absPathToImport.startsWith(assetsPath) && !absPathToImport.startsWith(dist)) {\n                errors.add(`${getLineCol(path.node)} \"${specifier}\": Valid imports can only import from the dist directory or the sibling \\`assets/\\` directory.`);\n            }\n            return errors;\n        }\n        // NOTE(fks): Removed as \"too opinionated\" (rightfully!).\n        // const parts = specifier.split('/').length;\n        // if ((specifier.startsWith('@') && parts > 2) || (!specifier.startsWith('@') && parts > 1)) {\n        //   errors.add(\n        //     `${getLineCol(path.node)} \"${specifier}\": Avoid directly importing private files inside external packages.`,\n        //   );\n        //   return errors;\n        // }\n        return errors;\n    }\n    traverse(ast, {\n        Identifier(path) {\n            if (path.node.name === '__dirname') {\n                errors.add(`${getLineCol(path.node)} \\`__dirname\\` is not a valid ESM global. Use \\`import.meta.url\\` instead.`);\n            }\n            if (path.node.name === '__filename') {\n                errors.add(`${getLineCol(path.node)} \\`__filename\\` is not a valid ESM global. Use \\`import.meta.url\\` instead.`);\n            }\n            if (path.node.name === 'require' && path.parent.type !== 'CallExpression') {\n                errors.add(`${getLineCol(path.node)} \\`require()\\` is not a valid ESM global. Use \\`import()\\` instead.`);\n            }\n            if (path.node.name === 'module' &&\n                path.parent.type !== 'MemberExpression' &&\n                path.parent.type !== 'ObjectProperty') {\n                errors.add(`${getLineCol(path.node)} \\`module\\` is not a valid ESM global. Use \\`export\\` instead.`);\n            }\n            // TODO: Lint against other node concepts?\n        },\n        ImportDeclaration(path) {\n            validateSpecifier(path.node.source.value, path).forEach(e => errors.add(e));\n        },\n        Import(path) {\n            if (path.parent.type !== 'CallExpression') {\n                errors.add(`${getLineCol(path.node)} \\`import()\\` should only be used/called directly.`);\n                return;\n            }\n            const results = validateDynamicImportArguments(path);\n            if (results.size > 0) {\n                results.forEach(e => errors.add(e));\n                return;\n            }\n            validateSpecifier(path.parent.arguments[0].value, path).forEach(e => errors.add(e));\n        },\n        MetaProperty(path) {\n            if (!path.parent.property || path.parent.property.name !== 'url') {\n                errors.add(`${getLineCol(path.node)} \\`url\\` is the only \\`import.meta\\` property currently supported in spec.`);\n            }\n        },\n    });\n    return errors;\n}\n","import * as fs from './util/fs.js';\nimport validateFile from './util/babel-validate-file.js';\nimport * as path from 'path';\nimport chalk from 'chalk';\nimport minimist from 'minimist';\nimport nodeFs from 'fs';\nimport mkdirp from 'mkdirp';\nimport babel from '@babel/core';\nimport babelPluginDynamicImportSyntax from '@babel/plugin-syntax-dynamic-import';\nimport babelPluginImportMetaSyntax from '@babel/plugin-syntax-import-meta';\nimport babelPresetTypeScript from '@babel/preset-typescript';\nimport babelPluginImportRewrite from '@pika/babel-plugin-esm-import-rewrite';\n/*\n\n$ standard-pkg [--src src/] [--dist dist-src/]\n- builds `src/` -> `dist-src/`\n- writes `src/` -> `dist-src/`\n- lints `dist-src/`\n\n$ standard-pkg [--src src/]\n- builds `src/` -> `dist-src/`\n- lints `dist-src/`\n- (does not write to disk)\n\n$ standard-pkg [--dist dist-src/]\n$ standard-pkg lint dist-src/\n- lints `dist-src/`\n\n*/\n// const argv = yargs.command({\n//   command: 'build',\n//   describe: 'describe',\n//   builder: (yargs) => yargs.option('src', {\n//         default: 'src/',\n//         describe: 'x marks the spot',\n//         type: 'string'\n//     }).option('dist', {\n//       default: 'dist/',\n//       describe: 'x marks the spot',\n//       type: 'string'\n//   }),\n//   handler: (argv) => undefined,\n// }).command({\n//   command: 'lint [dist]',\n//   aliases: ['$0'],\n//   describe: 'describe',\n//   builder: (yargs) => yargs.option('src', {\n//         default: 'src/',\n//         describe: 'x marks the spot',\n//         type: 'string'\n//     }),\n//   handler: (argv) => undefined\n// }).help();\n// console.log(argv);\nfunction log(fileName, errors) {\n    console.log(chalk.bold(fileName));\n    for (const error of errors) {\n        console.log(' ', error.level === 2 ? '⚠️ ' : '   ', error.msg);\n    }\n}\nexport class Lint {\n    constructor(dist, { ignoreExtensions } = {}) {\n        this.dist = dist;\n        this.errors = new Map();\n        this.totalNum = 0;\n        this.ignoreExtensions = ignoreExtensions || false;\n    }\n    addError(filename, msg, level = 2) {\n        const errors = this.errors.get(filename) || [];\n        errors.push({ msg, level });\n        this.errors.set(filename, errors);\n    }\n    async init() {\n        const { dist } = this;\n        const dir = path.join(dist, '..');\n        const files = await fs.glob(`**/*`, {\n            cwd: dist,\n            absolute: true,\n            nodir: true,\n        });\n        for (const fileLoc of files) {\n            const relativePath = path.relative(path.join(dist, '..'), fileLoc);\n            const extName = path.extname(fileLoc);\n            if (extName === '.map') {\n                continue;\n            }\n            if (fileLoc.includes('README')) {\n                continue;\n            }\n            if (extName !== '.js') {\n                this.addError(relativePath, 'Only JavaScript files are expected in your dist-src/ distribution.');\n                this.totalNum++;\n                continue;\n            }\n            const fileContents = await fs.readFile(fileLoc);\n            const validateErrors = validateFile(fileContents, fileLoc, dir, dist, this.ignoreExtensions);\n            for (const errMsg of validateErrors) {\n                this.addError(relativePath, errMsg);\n            }\n            this.totalNum += validateErrors.size;\n        }\n    }\n    summary() {\n        if (this.totalNum === 0) {\n            return;\n        }\n        console.log(``);\n        for (const [filename, errors] of this.errors.entries()) {\n            log(filename, errors);\n        }\n        console.log(``);\n        console.log(chalk.red('✘'), `${this.totalNum} issues found.`);\n    }\n    exitCode() {\n        return this.totalNum === 0 ? 0 : 1;\n    }\n}\nexport class Build {\n    constructor(dir, options = {}) {\n        this.dir = dir;\n        this.options = options;\n        this.result = new Map();\n    }\n    async init() {\n        const { dir, options } = this;\n        const files = (await fs.glob(`**/*`, {\n            cwd: dir,\n            nodir: true,\n            absolute: false,\n            ignore: options.exclude || [],\n        })).filter(filepath => !filepath.endsWith('.d.ts') && !filepath.includes('README'));\n        for (const sourcePath of files) {\n            const sourcePathAbs = path.join(dir, sourcePath);\n            const transformedPath = sourcePath\n                // .replace(path.join(dir, 'src/'), path.join(out, 'dist-src/'))\n                .replace('.ts', '.js')\n                .replace('.tsx', '.js')\n                .replace('.jsx', '.js')\n                .replace('.mjs', '.js');\n            const resultSrc = await babel.transformFileAsync(sourcePathAbs, {\n                cwd: dir,\n                presets: [[babelPresetTypeScript]],\n                plugins: [\n                    [babelPluginImportRewrite, { addExtensions: true }],\n                    babelPluginDynamicImportSyntax,\n                    babelPluginImportMetaSyntax,\n                ],\n            });\n            this.result.set(transformedPath, resultSrc.code);\n        }\n        return this.result;\n    }\n    async write(out, result = this.result) {\n        for (const [filepath, contents] of result.entries()) {\n            const transformedPathAbs = path.join(out, filepath);\n            mkdirp.sync(path.dirname(transformedPathAbs));\n            nodeFs.writeFileSync(transformedPathAbs, contents);\n        }\n    }\n}\n// export async function runBuild(args: Arguments): Promise<void> {\n// }\nexport async function run(argv) {\n    var args = minimist(argv.slice(2));\n    const srcDir = path.resolve(process.cwd(), typeof args.src === 'string' ? args.src : 'src');\n    const distDir = path.resolve(process.cwd(), typeof args.dist === 'string' ? args.dist : 'lib');\n    if (args.src) {\n        console.log(chalk.bold.dim(`»`), chalk(`Building ${path.relative(process.cwd(), srcDir)}${path.sep} → ${path.relative(process.cwd(), distDir)}${path.sep}...`));\n        const builder = new Build(srcDir);\n        await builder.init();\n        await builder.write(distDir);\n    }\n    console.log(chalk.bold.dim(`»`), chalk(`Linting ${path.relative(process.cwd(), distDir)}${path.sep}...`));\n    const linter = new Lint(distDir);\n    await linter.init();\n    if (linter.totalNum === 0) {\n        // console.log(``);\n        console.log(chalk.bold.green(`✓`), '0 issues found.');\n    }\n    else {\n        linter.summary();\n    }\n    process.exit(linter.exitCode());\n}\n"],"names":["glob","promisify","_glob","readFile","path","util","fs","encoding","getLineCol","node","loc","start","chalk","dim","line","column","validateDynamicImportArguments","parent","arguments","length","Set","argNode","type","validate","code","fileLoc","cwd","dist","ignoreExtensions","ast","parse","plugins","sourceType","errors","validateSpecifier","specifier","startsWith","endsWith","add","absPathToImport","nodePath","assetsPath","traverse","Identifier","name","ImportDeclaration","source","value","forEach","e","Import","results","size","MetaProperty","property","log","fileName","console","bold","error","level","msg","Lint","constructor","Map","totalNum","addError","filename","get","push","set","init","dir","files","absolute","nodir","relativePath","extName","includes","fileContents","validateErrors","validateFile","errMsg","summary","entries","red","exitCode","Build","options","result","ignore","exclude","filter","filepath","sourcePath","sourcePathAbs","transformedPath","replace","resultSrc","babel","transformFileAsync","presets","babelPresetTypeScript","babelPluginImportRewrite","addExtensions","babelPluginDynamicImportSyntax","babelPluginImportMetaSyntax","write","out","contents","transformedPathAbs","mkdirp","sync","nodeFs","writeFileSync","run","argv","args","minimist","slice","srcDir","process","src","distDir","builder","linter","green","exit"],"mappings":"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"}